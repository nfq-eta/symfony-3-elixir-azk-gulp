/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$bulet-black-name: 'bulet-black';
$bulet-black-x: 0px;
$bulet-black-y: 0px;
$bulet-black-offset-x: 0px;
$bulet-black-offset-y: 0px;
$bulet-black-width: 16px;
$bulet-black-height: 16px;
$bulet-black-total-width: 64px;
$bulet-black-total-height: 48px;
$bulet-black-image: '../img/sprite.png';
$bulet-black: (0px, 0px, 0px, 0px, 16px, 16px, 64px, 48px, '../img/sprite.png', 'bulet-black', );
$bulet-blue-name: 'bulet-blue';
$bulet-blue-x: 16px;
$bulet-blue-y: 0px;
$bulet-blue-offset-x: -16px;
$bulet-blue-offset-y: 0px;
$bulet-blue-width: 16px;
$bulet-blue-height: 16px;
$bulet-blue-total-width: 64px;
$bulet-blue-total-height: 48px;
$bulet-blue-image: '../img/sprite.png';
$bulet-blue: (16px, 0px, -16px, 0px, 16px, 16px, 64px, 48px, '../img/sprite.png', 'bulet-blue', );
$bulet-green-name: 'bulet-green';
$bulet-green-x: 0px;
$bulet-green-y: 16px;
$bulet-green-offset-x: 0px;
$bulet-green-offset-y: -16px;
$bulet-green-width: 16px;
$bulet-green-height: 16px;
$bulet-green-total-width: 64px;
$bulet-green-total-height: 48px;
$bulet-green-image: '../img/sprite.png';
$bulet-green: (0px, 16px, 0px, -16px, 16px, 16px, 64px, 48px, '../img/sprite.png', 'bulet-green', );
$bulet-orange-name: 'bulet-orange';
$bulet-orange-x: 16px;
$bulet-orange-y: 16px;
$bulet-orange-offset-x: -16px;
$bulet-orange-offset-y: -16px;
$bulet-orange-width: 16px;
$bulet-orange-height: 16px;
$bulet-orange-total-width: 64px;
$bulet-orange-total-height: 48px;
$bulet-orange-image: '../img/sprite.png';
$bulet-orange: (16px, 16px, -16px, -16px, 16px, 16px, 64px, 48px, '../img/sprite.png', 'bulet-orange', );
$bulet-purple-name: 'bulet-purple';
$bulet-purple-x: 32px;
$bulet-purple-y: 0px;
$bulet-purple-offset-x: -32px;
$bulet-purple-offset-y: 0px;
$bulet-purple-width: 16px;
$bulet-purple-height: 16px;
$bulet-purple-total-width: 64px;
$bulet-purple-total-height: 48px;
$bulet-purple-image: '../img/sprite.png';
$bulet-purple: (32px, 0px, -32px, 0px, 16px, 16px, 64px, 48px, '../img/sprite.png', 'bulet-purple', );
$bulet-red-light-name: 'bulet-red-light';
$bulet-red-light-x: 32px;
$bulet-red-light-y: 16px;
$bulet-red-light-offset-x: -32px;
$bulet-red-light-offset-y: -16px;
$bulet-red-light-width: 16px;
$bulet-red-light-height: 16px;
$bulet-red-light-total-width: 64px;
$bulet-red-light-total-height: 48px;
$bulet-red-light-image: '../img/sprite.png';
$bulet-red-light: (32px, 16px, -32px, -16px, 16px, 16px, 64px, 48px, '../img/sprite.png', 'bulet-red-light', );
$bulet-red-name: 'bulet-red';
$bulet-red-x: 0px;
$bulet-red-y: 32px;
$bulet-red-offset-x: 0px;
$bulet-red-offset-y: -32px;
$bulet-red-width: 16px;
$bulet-red-height: 16px;
$bulet-red-total-width: 64px;
$bulet-red-total-height: 48px;
$bulet-red-image: '../img/sprite.png';
$bulet-red: (0px, 32px, 0px, -32px, 16px, 16px, 64px, 48px, '../img/sprite.png', 'bulet-red', );
$bulet-silver-name: 'bulet-silver';
$bulet-silver-x: 16px;
$bulet-silver-y: 32px;
$bulet-silver-offset-x: -16px;
$bulet-silver-offset-y: -32px;
$bulet-silver-width: 16px;
$bulet-silver-height: 16px;
$bulet-silver-total-width: 64px;
$bulet-silver-total-height: 48px;
$bulet-silver-image: '../img/sprite.png';
$bulet-silver: (16px, 32px, -16px, -32px, 16px, 16px, 64px, 48px, '../img/sprite.png', 'bulet-silver', );
$bulet-white-name: 'bulet-white';
$bulet-white-x: 32px;
$bulet-white-y: 32px;
$bulet-white-offset-x: -32px;
$bulet-white-offset-y: -32px;
$bulet-white-width: 16px;
$bulet-white-height: 16px;
$bulet-white-total-width: 64px;
$bulet-white-total-height: 48px;
$bulet-white-image: '../img/sprite.png';
$bulet-white: (32px, 32px, -32px, -32px, 16px, 16px, 64px, 48px, '../img/sprite.png', 'bulet-white', );
$bulet-yello-name: 'bulet-yello';
$bulet-yello-x: 48px;
$bulet-yello-y: 0px;
$bulet-yello-offset-x: -48px;
$bulet-yello-offset-y: 0px;
$bulet-yello-width: 16px;
$bulet-yello-height: 16px;
$bulet-yello-total-width: 64px;
$bulet-yello-total-height: 48px;
$bulet-yello-image: '../img/sprite.png';
$bulet-yello: (48px, 0px, -48px, 0px, 16px, 16px, 64px, 48px, '../img/sprite.png', 'bulet-yello', );
$spritesheet-width: 64px;
$spritesheet-height: 48px;
$spritesheet-image: '../img/sprite.png';
$spritesheet-sprites: ($bulet-black, $bulet-blue, $bulet-green, $bulet-orange, $bulet-purple, $bulet-red-light, $bulet-red, $bulet-silver, $bulet-white, $bulet-yello, );
$spritesheet: (64px, 48px, '../img/sprite.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
